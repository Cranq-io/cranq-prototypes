{
  "description": "Splits data received via `unsplit` by fields / indexes.\n\nDo not use splitters to access optional record fields. Opt for a `data/dictionary/Item getter` in those cases instead.\n\nExample A (record input):\n1.`fields` is set to [\"a\", \"b\"]\n2. Output ports `a` and `b` get created.\n3. {\"a\": \"foo\", \"b\": \"bar\"}@0 received by `unsplit`\n4. \"foo\"@0 is sent via `a`\n5. \"bar\"@0 is sent via `b`\n\nExample B (tuple input):\n1.`fields` is set to [0, 1]\n2. Output ports `0` and `1` get created.\n3. [\"foo\", \"bar\"]@0 received by `unsplit`\n4. \"foo\"@0 is sent via `0`\n5. \"bar\"@0 is sent via `1`\n\nMore: https://github.com/Cranq-io/cranq-tutorials/blob/main/reference/1_application_flow/1_3_synchronization/README.md#example---synchronizing-node-inputs.",
  "interface": {
    "inputs": {
      "7b39d568-3d5a-46fe-8670-3355f60c2746": {
        "description": "Sets a list of output port names matching property names in the data received via `unsplit`.\n\nMust be parameter.\n\nExample:\n[\"a\", \"b\"]",
        "type": "(string[] or number[])",
        "name": "fields"
      },
      "6ad86184-6890-4323-8021-3496a682c98e": {
        "description": "Receives records or tuples to be split into individual items.\n\nExamples:\n* {\"a\": 5, \"b\": 2}\n* [5, 2]",
        "type": "({string: any} or any[])",
        "name": "unsplit"
      }
    },
    "outputs": {
      "12be78f3-a82c-4a9e-bb4e-46d61ee64ca3": {
        "description": "Sends input data split into individual fields.",
        "paramId": "7b39d568-3d5a-46fe-8670-3355f60c2746",
        "type": "(typeof `unsplit`[string] or typeof `unsplit`[number])",
        "name": "split"
      }
    }
  },
  "implementations": {
    "es6": {
      "cleanupFunction": "",
      "dependencies": {},
      "initFunction": "",
      "inputFunctions": {
        "6ad86184-6890-4323-8021-3496a682c98e": "const fields = params.fields;\nfor (const field of fields) {\n  const value = data[field];\n  if (value !== undefined)\n    outputs[field](value, tag);\n}\n"
      }
    },
    "es6-node": {
      "cleanupFunction": "",
      "dependencies": {},
      "initFunction": "",
      "inputFunctions": {
        "6ad86184-6890-4323-8021-3496a682c98e": "const fields = params.fields;\nfor (const field of fields) {\n  const value = data[field];\n  if (value !== undefined)\n    outputs[field](value, tag);\n}\n"
      }
    }
  },
  "name": "flow/Splitter",
  "keywords": {
    "destructure record": null,
    "destructure tuple": null,
    "descructuring": null,
    "distribute": null,
    "synchronization": null,
    "syncing": null
  },
  "iconId": "802b6352-2279-4681-84b8-6558e185fd36",
  "attributes": {
    "featured": true,
    "locked": true
  }
}
