{
  "implementations": {
    "es6-node": {
      "dependencies": {
        "npm": {
          "web3": {
            "description": ""
          }
        }
      },
      "inputFunctions": {
        "47948633-8f3e-451c-bd33-cfdf9a33a9f6": "const Web3 = require(\"web3\");\n\nif (!(data\n    && (typeof data === \"string\" || (typeof data === \"object\" && typeof data.providerUrl === \"string\" ))\n)) {\n    throw new Error(\"Input data is invalid. Please check it complies with type!\");\n}\n\nconst providerUrl = (typeof data === \"object\") ? data.providerUrl : data;\nconst web3 = new Web3(providerUrl);\n\nweb3.eth.getGasPrice(\n    (error, gasPrice) => {\n        if (error){\n            outputs[\"error\"]({error: e.toString()}, tag);\n        }\n        else{\n            outputs[\"gasPrice\"](gasPrice, tag);\n        }\n    }\n)"
      }
    }
  },
  "interface": {
    "inputs": {
      "47948633-8f3e-451c-bd33-cfdf9a33a9f6": {
        "type": "(\n  {\"providerUrl\": string} \n  or string\n)",
        "name": "providerUrl"
      }
    },
    "outputs": {
      "7e872669-e0c1-4ebe-a7d6-75ba6c3cd5b9": {
        "type": "any",
        "name": "gasPrice"
      },
      "968befee-5d20-4262-a4ac-84126cdd70db": {
        "type": "{\"error\": string}",
        "name": "error"
      }
    }
  },
  "name": "blockchain/ethereum/Gas price getter/Internal",
  "iconId": "88cb21a8-d088-476e-8a3a-fb62c6a5fd58",
  "attributes": {
    "internal": true,
    "locked": true
  }
}
