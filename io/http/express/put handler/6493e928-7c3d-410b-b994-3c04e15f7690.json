{
  "name": "io/http/express/PUT handler",
  "interface": {
    "inputs": {
      "b035c218-f613-4105-845f-8a90f9e74fa4": {
        "type": "string",
        "name": "app ID",
        "description": "The id of the express instance.\n\nExample: \n\"my-express-server\""
      },
      "09ad0a55-6999-4fbb-aae5-8c2c77c3cab9": {
        "type": "(string or string[])",
        "name": "route",
        "description": "Receives the route(s) to handle requests for. Route be specified as exact match (1) or as pattern match (2).\n\nExample:\n1) \"/status\" will just match \"/status\"\n2) \"/s*s\" will match \"status\", \"shoes\", etc.."
      },
      "22ea4ce4-c526-4aeb-ad29-1a70abd14f13": {
        "type": "number",
        "name": "status",
        "description": "Receives the HTTP status code to be sent with the response to the client.\n\nExample: \n200"
      },
      "aa8fe7d9-9d8b-45d8-8ad0-804bfb6ce1c7": {
        "type": "{string:string}",
        "name": "headers",
        "description": "Receives the HTTP headers to be sent with the response to the client.\n\nExample: \n{\n  \"content-type\": \"application/json\"\n}"
      },
      "aec8c423-cf1d-4836-a2f5-db5acefdd038": {
        "type": "any",
        "name": "body",
        "description": "Receives the content to send to the client as response body.\n\nExample:\n- \"OK\"\n- 3.14\n- { \"status\": \"OK\" }"
      }
    },
    "outputs": {
      "981b5b28-6fda-40a7-aa3c-c2d6df86f7c1": {
        "type": "typeof `headers`",
        "name": "headers",
        "description": "Forwards  the headers of the request to be processed.\n\nExample: \n{\n  \"content-type\": \"application/json\"\n}"
      },
      "54afff64-fd15-4eab-98bc-4bee313d5941": {
        "type": "any",
        "name": "body",
        "description": "Forwards the body of the request to be processed.\n\nExample:\n- \"OK\"\n- 3.14\n- { \"status\": \"OK\" }"
      },
      "df7f3151-0c5a-496a-b00c-c2cb288273ab": {
        "type": "any",
        "name": "done",
        "description": "Event triggered when the request has been processed."
      }
    }
  },
  "implementations": {
    "cranq": {
      "connections": {
        "d42ff57d-6cec-4407-a100-6e856cbe472c": {
          "75cde7e3-b158-4836-8bcd-a89e72314ee8": {
            "1133dac2-7d2f-4e73-8f18-d55b77ccf409": {
              "91981648-5a12-4061-8be8-3c43210193c7": {}
            }
          }
        },
        "1133dac2-7d2f-4e73-8f18-d55b77ccf409": {
          "452b5701-97ed-4e87-b58d-34ea209e802d": {
            "bea47959-a016-456e-b4c9-8cb21a3b302c": {
              "6ad86184-6890-4323-8021-3496a682c98e": {}
            }
          }
        }
      },
      "forwards": {
        "inputs": {
          "b035c218-f613-4105-845f-8a90f9e74fa4": {
            "1133dac2-7d2f-4e73-8f18-d55b77ccf409": {
              "91ce9cc7-04d3-43af-81be-39747c4aaf61": {}
            }
          },
          "09ad0a55-6999-4fbb-aae5-8c2c77c3cab9": {
            "1133dac2-7d2f-4e73-8f18-d55b77ccf409": {
              "fe5ec9de-a1f8-459c-bc69-e2fbf17c722b": {}
            }
          },
          "22ea4ce4-c526-4aeb-ad29-1a70abd14f13": {
            "d42ff57d-6cec-4407-a100-6e856cbe472c": {
              "status": {}
            }
          },
          "aa8fe7d9-9d8b-45d8-8ad0-804bfb6ce1c7": {
            "d42ff57d-6cec-4407-a100-6e856cbe472c": {
              "headers": {}
            }
          },
          "aec8c423-cf1d-4836-a2f5-db5acefdd038": {
            "d42ff57d-6cec-4407-a100-6e856cbe472c": {
              "body": {}
            }
          }
        },
        "outputs": {
          "981b5b28-6fda-40a7-aa3c-c2d6df86f7c1": {
            "bea47959-a016-456e-b4c9-8cb21a3b302c": {
              "headers": {}
            }
          },
          "54afff64-fd15-4eab-98bc-4bee313d5941": {
            "bea47959-a016-456e-b4c9-8cb21a3b302c": {
              "body": {}
            }
          },
          "df7f3151-0c5a-496a-b00c-c2cb288273ab": {
            "1133dac2-7d2f-4e73-8f18-d55b77ccf409": {
              "38bfa33c-cddf-478d-bf52-0f4ec611e800": {}
            }
          }
        }
      },
      "nodes": {
        "1133dac2-7d2f-4e73-8f18-d55b77ccf409": {
          "coordinates": [
            0,
            -47
          ],
          "name": "route handler",
          "prototype": "a63f623a-f4b2-4a06-acca-83774cd4ca41",
          "params": {
            "929caaa1-7ba7-46bb-951d-869e82fd5e47": "\"put\""
          }
        },
        "d42ff57d-6cec-4407-a100-6e856cbe472c": {
          "coordinates": [
            -128,
            23
          ],
          "name": "build response",
          "prototype": "222a7543-3692-4c6d-b027-c422c99b23a1",
          "params": {
            "ef31c1e9-cfd5-458b-8d3a-951e3db9c232": "[\"status\", \"headers\", \"body\"]"
          }
        },
        "bea47959-a016-456e-b4c9-8cb21a3b302c": {
          "coordinates": [
            129,
            24
          ],
          "name": "split request",
          "prototype": "73303290-6d1e-44cf-9414-66769cbb8e91",
          "params": {
            "7b39d568-3d5a-46fe-8670-3355f60c2746": "[\"headers\", \"body\"]"
          }
        }
      }
    }
  },
  "description": "Receives PUT requests on the specified route and dispatches the corresponding response.\n\nExample:\n1. \"my-express-server\"@0 received on `app ID`\n2. \"/users/\"@0 received on `route`\n3. a client POST request received by express with URL \"http://api.mydomain.com/users/2\n4. the following signals are sent to other node(s) processing the request\n- {\n \"accept\": \"application/json\"\n}@0 sent on `headers`\n- { id:2, \"name\": \"John Doe\", \"age\": 29 }@0 sent `body`\n5. The following signals are received back from processing nodes and sent out to the client:\n- 200@0 on `status`,\n- {\n    \"content-type\": \"application/json\" \n  }@0 on `headers`,\n-  { id:2, \"name\": \"John Doe\", \"age\": 29 }@0 on `body`\n6. null@0 sent on `done`",
  "keywords": {
    "api": null,
    "request": null,
    "response": null
  },
  "attributes": {
    "locked": true
  }
}
