{
  "name": "examples/projects/JUnit reporter/click me",
  "interface": {
    "inputs": {},
    "outputs": {}
  },
  "implementations": {
    "cranq": {
      "nodes": {
        "8253ddd3-0709-42eb-b91e-309f5d3acf43": {
          "coordinates": [
            -300,
            -40
          ],
          "description": "This node kicks off the flow of data by sending a start signal.",
          "params": {},
          "prototype": "d227e22b-e827-4c9d-99db-f96da179bd52",
          "name": "start"
        },
        "79688e50-8550-40b8-afea-3c7497fcb9f3": {
          "coordinates": [
            300,
            -40
          ],
          "description": "As the last step, we log the XML to the output.",
          "params": {},
          "prototype": "1d2a6438-e4bd-4105-b491-cebbb4cae348",
          "name": "log"
        },
        "516c9801-9d67-4531-9e86-dae68091237d": {
          "coordinates": [
            -150,
            40
          ],
          "name": "authenticate",
          "prototype": "246824cf-2645-43fb-8c47-485addbdaed5",
          "description": "Here we authenticate against the API as preparation for all subsequent tests."
        },
        "a516934c-7717-47b9-8588-b1e129aa0e0b": {
          "coordinates": [
            0,
            -40
          ],
          "name": "test GET /user/:id",
          "prototype": "d07d1d05-54bf-4d29-837c-5cb5214b89e3",
          "params": {
            "11214f91-208e-4751-8ea6-db9fbf6e71f5": "\"GET /user/:id\""
          },
          "description": "This node groups all tests concerning GET requests made to the /user/:id endpoint.\n\nZoom in and explore!"
        },
        "2129038f-5087-4cc3-b26c-733693b2d08e": {
          "coordinates": [
            150,
            40
          ],
          "name": "prepare JUnit report",
          "prototype": "4052cde9-be53-4b55-9f17-d49bb5a870b7",
          "params": {
            "6155e0ed-073d-4322-8c54-b28d9a73b56c": "100"
          },
          "description": "This node receives and aggregates individual assertions and converts the result into a JUnit XML string."
        }
      },
      "connections": {
        "516c9801-9d67-4531-9e86-dae68091237d": {
          "65ebbf64-a482-4bad-b081-25714506fe00": {
            "a516934c-7717-47b9-8588-b1e129aa0e0b": {
              "b193e927-35dc-4ce2-bbba-1d84d3c297a8": {}
            }
          }
        },
        "a516934c-7717-47b9-8588-b1e129aa0e0b": {
          "00f8e221-4740-4c97-8522-f4849303f2c0": {
            "2129038f-5087-4cc3-b26c-733693b2d08e": {
              "cea919fc-5558-4d8b-ab09-fbb0a489cb59": {}
            }
          }
        },
        "8253ddd3-0709-42eb-b91e-309f5d3acf43": {
          "fb159194-7413-4b61-9b9a-f6bbfd3d7977": {
            "516c9801-9d67-4531-9e86-dae68091237d": {
              "bf13f240-0128-4063-b374-6e51c6c79e17": {}
            }
          }
        },
        "2129038f-5087-4cc3-b26c-733693b2d08e": {
          "b00545ee-655e-442c-923a-9c58ae8c9dec": {
            "79688e50-8550-40b8-afea-3c7497fcb9f3": {
              "73758fba-7b0c-4ea6-8fec-0b56982d5451": {}
            }
          }
        }
      },
      "forwards": {
        "inputs": {},
        "outputs": {}
      }
    }
  },
  "description": "API testing example with JUnit output, wrapped into a single node, with an irresistible name! ðŸ˜„",
  "attributes": {
    "locked": true
  }
}