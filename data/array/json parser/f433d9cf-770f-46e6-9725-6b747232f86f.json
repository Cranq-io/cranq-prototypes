{
  "description": "Parses a JSON string to  array.\n\nExamples:\nA.\n1. \"[1,2]\"@0 recieved via `json`\n2. [1,2]@0 sent via `parsed`\n\nB.\n1. \"{}]\"@0 recieved via `json`\n2. \"{}]\"@0 sent via `bounced`",
  "interface": {
    "inputs": {
      "6af01236-82c3-45ef-91df-cadb3ac3aefd": {
        "type": "string",
        "name": "json",
        "description": "Recieves JSON string.\n\nExample:\n\"[1,2]\""
      }
    },
    "outputs": {
      "b47ccbae-9226-4704-b803-18055b97d2f5": {
        "type": "any[]",
        "name": "parsed",
        "description": "Sends the parsed array.\n\nExample:\n[1,2]"
      },
      "e3aef7a7-7e19-4ed6-8d00-2ca95c98f12b": {
        "type": "string",
        "name": "bounced",
        "description": "In case of error during parsing or when the result of the parseisng is not array it sends the `json` input string.\n\nExample:\n\"{}]\""
      }
    }
  },
  "implementations": {
    "es6": {
      "cleanupFunction": "",
      "dependencies": {},
      "initFunction": "",
      "inputFunctions": {
        "6af01236-82c3-45ef-91df-cadb3ac3aefd": "try {\n  const parsed = JSON.parse(data);\n  if (parsed instanceof Array) {\n    outputs.parsed(parsed, tag);\n  } else {\n    outputs.bounced(data, tag);\n  }\n} catch (error) {\n  outputs.bounced(data, tag);\n}"
      }
    },
    "es6-node": {
      "cleanupFunction": "",
      "dependencies": {},
      "initFunction": "",
      "inputFunctions": {
        "6af01236-82c3-45ef-91df-cadb3ac3aefd": "try {\n  const parsed = JSON.parse(data);\n  if (parsed instanceof Array) {\n    outputs.parsed(parsed, tag);\n  } else {\n    outputs.bounced(data, tag);\n  }\n} catch (error) {\n  outputs.bounced(data, tag);\n}"
      }
    }
  },
  "name": "data/array/JSON parser",
  "keywords": {
    "string to array": null
  },
  "iconId": "cbb85c56-3c8f-4e5e-afdd-a9dd9e84385d",
  "attributes": {
    "locked": true
  }
}
