{
  "implementations": {
    "es6-node": {
      "dependencies": {
        "npm": {
          "xpath": {
            "description": ""
          },
          "parse5": {
            "description": ""
          },
          "xmlserializer": {
            "description": ""
          },
          "xmldom": {
            "description": ""
          }
        }
      },
      "inputFunctions": {
        "6c326055-5409-47ab-8197-305240922f8e": "const xpath = require(\"xpath\");\nconst parse5 = require(\"parse5\");\nconst xmlser = require(\"xmlserializer\");\nconst dom = require(\"xmldom\").DOMParser;\n\nconst { document, query } = data;\nconst doc = new dom({ \n  errorHandler: {\n    warning: () => {},\n    error: (e) => {outputs.error({\"error\": e.toString()}, tag)}\n  }\n}).parseFromString(document);\n\ntry {\n  const select = xpath.useNamespaces({ \"x\": \"http://www.w3.org/1999/xhtml\" });\n  const nodes = select(query, doc);\n  const values = nodes.map((node) => node.toString());\n  outputs.results(values, tag)\n} catch(e) {\n  outputs.error({\"error\": e.toString()}, tag)\n}"
      }
    }
  },
  "interface": {
    "inputs": {
      "6c326055-5409-47ab-8197-305240922f8e": {
        "type": "{\n\"document\": string, \n\"query\": string\n}",
        "name": "document and query"
      }
    },
    "outputs": {
      "25eed9f7-7c3f-45f6-890e-0bbd32ab803a": {
        "type": "string[]",
        "name": "results"
      },
      "61377e56-b50f-47cc-9ffa-87dd33250c10": {
        "type": "{\"error\": string}",
        "name": "error"
      }
    }
  },
  "name": "html/XPath value finder (internal)",
  "iconId": "abac34e3-c832-4c7b-b045-62f82ebc3ddb",
  "attributes": {
    "internal": true,
    "locked": true
  }
}
