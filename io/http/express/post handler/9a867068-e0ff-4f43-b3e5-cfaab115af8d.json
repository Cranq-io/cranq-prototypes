{
  "name": "io/http/express/POST handler",
  "interface": {
    "inputs": {
      "68e28a31-9830-47c1-821d-cd6ed85acc5f": {
        "type": "string",
        "name": "app ID",
        "description": "The id of the express instance.\n\nExample: \n\"my-express-server\""
      },
      "c1e70d32-dff9-4e07-966a-9790f79a866e": {
        "type": "(string or string[])",
        "name": "route",
        "description": "Receives the route(s) to handle requests for. Route be specified as exact match (1) or as pattern match (2).\n\nExample:\n1) \"/status\" will just match \"/status\"\n2) \"/s*s\" will match \"status\", \"shoes\", etc.."
      },
      "518e130f-05bd-4b91-a6c7-ceda2f6ab7d8": {
        "type": "number",
        "name": "status",
        "description": "Receives the HTTP status code to be sent with the response to the client.\n\nExample: \n200"
      },
      "2f08d598-abff-4424-897a-67d3e7cdf98f": {
        "type": "{string:string}",
        "name": "headers",
        "description": "Receives the HTTP headers to be sent with the response to the client.\n\nExample: \n{\n  \"content-type\": \"application/json\"\n}"
      },
      "4ff466dc-54d0-4ce6-be4b-a784bf69409a": {
        "type": "any",
        "name": "body",
        "description": "Receives the content to send to the client as response body.\n\nExample:\n- \"OK\"\n- 3.14\n- { \"status\": \"OK\" }"
      }
    },
    "outputs": {
      "c87699ac-e27f-4dfd-8a4b-7b0f993ce4c5": {
        "type": "typeof `headers`",
        "name": "headers",
        "description": "Forwards  the headers of the request to be processed.\n\nExample: \n{\n  \"content-type\": \"application/json\"\n}"
      },
      "2f6d037f-891c-4083-9b12-3d8da03330b6": {
        "type": "any",
        "name": "body",
        "description": "Forwards the body of the request to be processed.\n\nExample:\n- \"OK\"\n- 3.14\n- { \"status\": \"OK\" }"
      },
      "2270cd4f-00b3-4c32-adf7-45dfd1a3a538": {
        "type": "any",
        "name": "done",
        "description": "Event triggered when the request has been processed."
      },
      "76d7c1be-b596-4fd8-89ed-a6b66e3ad954": {
        "type": "{\"error\": string}",
        "name": "error",
        "description": "Sends error information in case the request could not be handled."
      }
    }
  },
  "implementations": {
    "cranq": {
      "connections": {
        "0a73f678-a38b-48eb-8571-2b922b883ea5": {
          "75cde7e3-b158-4836-8bcd-a89e72314ee8": {
            "88c1b47c-8c76-4e13-9516-cad949be5044": {
              "91981648-5a12-4061-8be8-3c43210193c7": {}
            }
          }
        },
        "88c1b47c-8c76-4e13-9516-cad949be5044": {
          "452b5701-97ed-4e87-b58d-34ea209e802d": {
            "bcebe197-0d57-4814-afa6-3199deeff5ee": {
              "6ad86184-6890-4323-8021-3496a682c98e": {}
            }
          }
        }
      },
      "forwards": {
        "inputs": {
          "518e130f-05bd-4b91-a6c7-ceda2f6ab7d8": {
            "0a73f678-a38b-48eb-8571-2b922b883ea5": {
              "status": {}
            }
          },
          "2f08d598-abff-4424-897a-67d3e7cdf98f": {
            "0a73f678-a38b-48eb-8571-2b922b883ea5": {
              "headers": {}
            }
          },
          "4ff466dc-54d0-4ce6-be4b-a784bf69409a": {
            "0a73f678-a38b-48eb-8571-2b922b883ea5": {
              "body": {}
            }
          },
          "68e28a31-9830-47c1-821d-cd6ed85acc5f": {
            "88c1b47c-8c76-4e13-9516-cad949be5044": {
              "91ce9cc7-04d3-43af-81be-39747c4aaf61": {}
            }
          },
          "c1e70d32-dff9-4e07-966a-9790f79a866e": {
            "88c1b47c-8c76-4e13-9516-cad949be5044": {
              "fe5ec9de-a1f8-459c-bc69-e2fbf17c722b": {}
            }
          }
        },
        "outputs": {
          "2270cd4f-00b3-4c32-adf7-45dfd1a3a538": {
            "88c1b47c-8c76-4e13-9516-cad949be5044": {
              "38bfa33c-cddf-478d-bf52-0f4ec611e800": {}
            }
          },
          "c87699ac-e27f-4dfd-8a4b-7b0f993ce4c5": {
            "bcebe197-0d57-4814-afa6-3199deeff5ee": {
              "headers": {}
            }
          },
          "2f6d037f-891c-4083-9b12-3d8da03330b6": {
            "bcebe197-0d57-4814-afa6-3199deeff5ee": {
              "body": {}
            }
          },
          "76d7c1be-b596-4fd8-89ed-a6b66e3ad954": {
            "88c1b47c-8c76-4e13-9516-cad949be5044": {
              "12b5e681-073c-47bc-abb3-698530817f66": {}
            }
          }
        }
      },
      "nodes": {
        "88c1b47c-8c76-4e13-9516-cad949be5044": {
          "coordinates": [
            3.666666666666657,
            -51.333333333333314
          ],
          "name": "route handler",
          "prototype": "a63f623a-f4b2-4a06-acca-83774cd4ca41",
          "params": {
            "929caaa1-7ba7-46bb-951d-869e82fd5e47": "\"post\""
          }
        },
        "0a73f678-a38b-48eb-8571-2b922b883ea5": {
          "coordinates": [
            -115.33333333333334,
            32.666666666666686
          ],
          "name": "build response",
          "prototype": "222a7543-3692-4c6d-b027-c422c99b23a1",
          "params": {
            "ef31c1e9-cfd5-458b-8d3a-951e3db9c232": "[\"status\", \"headers\", \"body\"]"
          }
        },
        "bcebe197-0d57-4814-afa6-3199deeff5ee": {
          "coordinates": [
            132.66666666666666,
            37.666666666666686
          ],
          "name": "split request",
          "prototype": "73303290-6d1e-44cf-9414-66769cbb8e91",
          "params": {
            "7b39d568-3d5a-46fe-8670-3355f60c2746": "[\"headers\", \"body\"]"
          }
        }
      }
    }
  },
  "description": "Receives POST requests on the specified route and dispatches the corresponding response.\n\nExample:\n1. \"my-express-server\"@0 received on `app ID`\n2. \"/users/\"@0 received on `route`\n3. a client POST request received by express with URL \"http://api.mydomain.com/users/\n4. the following signals are sent to other node(s) processing the request\n- {\n \"accept\": \"application/json\"\n}@0 sent on `headers`\n- { \"name\": \"John Doe\", \"age\": 27 }@0 sent `body`\n5. The following signals are received back from processing nodes and sent out to the client:\n- 200@0 on `status`,\n- {\n    \"content-type\": \"application/json\" \n  }@0 on `headers`,\n-  { id:2, \"name\": \"John Doe\", \"age\": 27 }@0 on `body`\n6. null@0 sent on `done`\n",
  "keywords": {
    "api": null,
    "request": null,
    "response": null
  },
  "attributes": {
    "locked": true
  }
}
