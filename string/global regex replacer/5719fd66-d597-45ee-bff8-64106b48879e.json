{
  "name": "string/Global regex replacer",
  "description": "Replaces all occurrences of `regex` in `string` with `new`.",
  "interface": {
    "inputs": {
      "0e374f58-6b9c-453c-9d2e-e4887e0a367e": {
        "type": "string",
        "name": "string",
        "description": "Receives the string to be replaced.\n\nExample:\n\n\"dog cat rain Dog\"\n\n\nBackreference example:\n\n\"Jane Smith\""
      },
      "d1118ac0-749b-46e9-81af-8fc74dc14e10": {
        "type": "string",
        "name": "regex",
        "description": "Receives regular expression to test the specified string against.\n\nExample:\n\n\"[Dd]og\"\n\nBackreference example:\n\n\"(\\\\w+)\\\\s(\\\\w+)\""
      },
      "3490f391-9b3b-441e-b4a2-b078669cf5b4": {
        "type": "string",
        "name": "new",
        "description": "Receives the replacement string. In the replacement you can use backreference. More: \n\nExample:\n\n\"cat\"\n\nBackreference example: \n\n\"$2, $1\""
      }
    },
    "outputs": {
      "de479f5a-4a4f-4edc-9419-a79e46fef91c": {
        "type": "string",
        "name": "replaced",
        "description": "Sends the replaced string.\n\nExample:\n\n\"cat cat rain cat\"\n\nBackreference example:\n\n\"Smith, Jane\""
      }
    }
  },
  "implementations": {
    "cranq": {
      "nodes": {
        "5d8da719-7c13-49cd-b225-0bc502c942c1": {
          "coordinates": [
            71,
            -38.5
          ],
          "name": "replace",
          "prototype": "8a20c904-0681-4e9f-9afa-5b2f3828c500"
        },
        "969f1628-0c52-4bc2-b5d2-4113b047b7cf": {
          "coordinates": [
            -71,
            38.5
          ],
          "name": "sync params",
          "prototype": "222a7543-3692-4c6d-b027-c422c99b23a1",
          "params": {
            "ef31c1e9-cfd5-458b-8d3a-951e3db9c232": "[\"string\", \"regex\", \"new\"]"
          }
        }
      },
      "connections": {
        "969f1628-0c52-4bc2-b5d2-4113b047b7cf": {
          "75cde7e3-b158-4836-8bcd-a89e72314ee8": {
            "5d8da719-7c13-49cd-b225-0bc502c942c1": {
              "5b23079f-b416-4586-8d97-f19585fe22b8": {}
            }
          }
        }
      },
      "forwards": {
        "inputs": {
          "0e374f58-6b9c-453c-9d2e-e4887e0a367e": {
            "969f1628-0c52-4bc2-b5d2-4113b047b7cf": {
              "string": {}
            }
          },
          "d1118ac0-749b-46e9-81af-8fc74dc14e10": {
            "969f1628-0c52-4bc2-b5d2-4113b047b7cf": {
              "regex": {}
            }
          },
          "3490f391-9b3b-441e-b4a2-b078669cf5b4": {
            "969f1628-0c52-4bc2-b5d2-4113b047b7cf": {
              "new": {}
            }
          }
        },
        "outputs": {
          "de479f5a-4a4f-4edc-9419-a79e46fef91c": {
            "5d8da719-7c13-49cd-b225-0bc502c942c1": {
              "8d627a3a-01c0-41e0-8c78-3c53f620d9b6": {}
            }
          }
        }
      }
    }
  },
  "keywords": {
    "replace": null,
    "string": null,
    "search": null,
    "regex": null,
    "regular expression": null
  },
  "iconId": "73998790-4b3b-4bba-b5b9-99d4e55e0534",
  "attributes": {
    "locked": true
  }
}
