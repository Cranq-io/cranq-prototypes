{
    "description":  "Forwards data input in the order defined by a reference input.",
    "interface":  {
                      "inputs":  {
                                     "data":  {
                                                  "description":  "Receives data to be forwarded",
                                                  "type":  "any"
                                              },
                                     "reference":  {
                                                       "description":  "Receives signals that define the order of the forwarded signals.",
                                                       "type":  "any"
                                                   }
                                 },
                      "outputs":  {
                                      "data":  {
                                                   "description":  "Sends forwarded data",
                                                   "type":  "typeof(data)"
                                               }
                                  }
                  },
    "implementations":  {
                            "es6-node":  {
                                             "cleanupFunction":  "",
                                             "dependencies":  {

                                                              },
                                             "initFunction":  "state.dataByTag = state.dataByTag || new Map();\nstate.queue = state.queue || [];\nconst {dataByTag, queue} = state;\nstate.flush = () =\u003e {\n  while (dataByTag.has(queue[0])) {\n    const tag = queue.shift();\n    const data = dataByTag.get(tag);\n    dataByTag.delete(tag);\n    outputs.data(data, tag);\n  }\n}",
                                             "inputFunctions":  {
                                                                    "data":  "state.dataByTag.set(tag, data);\nstate.flush();",
                                                                    "reference":  "state.queue.push(tag);\nstate.flush();"
                                                                }
                                         }
                        },
    "name":  "flow/Queued forwarder"
}