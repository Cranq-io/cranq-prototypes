{
  "description": "See io/file/File mover",
  "interface": {
    "inputs": {
      "734fdacf-e24d-4e80-a715-3062e431d202": {
        "description": "",
        "type": "{\"source\": string, \"destination\": string}",
        "name": "source & destination"
      }
    },
    "outputs": {
      "b1814daf-05b5-41e9-8b7d-dec874824be2": {
        "description": "",
        "type": "typeof `source & destination`",
        "name": "moved"
      },
      "aec81441-0d60-4632-8bdd-980c39776e41": {
        "description": "",
        "type": "typeof `source & destination`",
        "name": "bounced"
      },
      "3652bc4b-0bda-4c22-9343-f68dc7991f53": {
        "type": "{\"error\": string}",
        "name": "error"
      }
    }
  },
  "implementations": {
    "es6-node": {
      "cleanupFunction": "",
      "dependencies": {},
      "initFunction": "",
      "inputFunctions": {
        "734fdacf-e24d-4e80-a715-3062e431d202": "const {rename} = require(\"fs\");\nconst {source, destination} = data;\nrename(source, destination, (error) => {\n  if (error) {\n    outputs.bounced(data, tag);\n    outputs.error({error: String(error)}, tag);\n  } else {\n    outputs.moved(data, tag);\n  }\n});"
      }
    }
  },
  "name": "io/file/File mover/Internal",
  "attributes": {
    "internal": true,
    "locked": true
  }
}
