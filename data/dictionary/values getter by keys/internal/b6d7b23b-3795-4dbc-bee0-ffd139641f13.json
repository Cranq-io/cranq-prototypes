{
  "description": "",
  "interface": {
    "inputs": {
      "9af21210-8f9c-4067-986a-f29fe11cede0": {
        "type": "{\"dict\": {string: any}, \"keys\": string[]}",
        "name": "dict & keys"
      }
    },
    "outputs": {
      "9e6164b8-807d-4f53-9a1b-2c8654bdcbbd": {
        "type": "typeof `dict & keys`[\"dict\"][string][]",
        "name": "values"
      },
      "ab3fd02c-4e36-4df3-89cb-6cd199426950": {
        "type": "string[]",
        "name": "not found keys"
      }
    }
  },
  "implementations": {
    "es6": {
      "cleanupFunction": "",
      "dependencies": {},
      "initFunction": "",
      "inputFunctions": {
        "9af21210-8f9c-4067-986a-f29fe11cede0": "const {dict, keys} = data;\noutputs.values(keys.map(key => dict[key]), tag);"
      }
    },
    "es6-node": {
      "cleanupFunction": "",
      "dependencies": {},
      "initFunction": "",
      "inputFunctions": {
        "9af21210-8f9c-4067-986a-f29fe11cede0": "const {dict, keys} = data;\n\nconst result = keys.reduce((previousResults, currentKey) => {\n  const value = dict[currentKey];\n  \n  if (value === undefined) {\n     previousResults[1].push(currentKey);\n     previousResults[0].push(null);\n  } else {\n    previousResults[0].push(value);\n  } \n  \n return previousResults;\n}, [[],[]]);\n\noutputs.values(result[0], tag);\noutputs[\"not found keys\"](result[1], tag);\n"
      }
    }
  },
  "name": "data/dictionary/Values getter by keys/Internal",
  "attributes": {
    "internal": true,
    "locked": true
  }
}
