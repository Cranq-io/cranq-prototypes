{
  "implementations": {
    "es6-node": {
      "dependencies": {
        "npm": {
          "express": {
            "description": ""
          }
        }
      },
      "inputFunctions": {
        "816628e2-c7f2-41f6-8cf2-27d752eff31c": "const express = require(\"express\");\nconst {id, type, options = {}} = data;\nlet app = shared[id];\nif (!app)\n  app = shared[id] = express();\nswitch (type) {\ncase \"use\":\n  const {middleware} = options;\n  switch (middleware) {\n  case \"json\":\n    app.use(express.json());\n    outputs.done(null, tag);\n    break;\n  case \"urlencoded\":\n    app.use(express.urlencoded());\n    outputs.done(null, tag);\n    break;\n  }\n  break;\ncase \"listen\":\n  const {port} = options;\n  app.listen(port, () => outputs.done(null, tag));\n  break;\ncase \"method\":\n  const {method, route} = options;\n  app[method](route, (req, res) => {\n    state[tag] = res;\n    const {\n      baseUrl, body, cookies, hostname, headers, ip, ips, method, originalUrl, params, path, protocol, query, route, secure, signedCookies, stale, subdomains, xhr\n    } = req;\n    outputs.request({\n      baseUrl, body, cookies, hostname, headers, ip, ips, method, originalUrl, params, path, protocol, query, route, secure, signedCookies, stale, subdomains, xhr\n    }, tag);\n  });\n  break;\n}",
        "a6b8ed07-3298-4bc7-acee-4c18f2399ffd": "const res = state[tag];\nconst {status, headers, body} = data;\nif (res) {\n  res.status(status);\n  for (const header in headers)\n    res.set(header, headers[header]);\n  res.send(body);\n  delete state[tag];\n  outputs.done(null, tag);\n}"
      }
    }
  },
  "interface": {
    "inputs": {
      "816628e2-c7f2-41f6-8cf2-27d752eff31c": {
        "type": "any",
        "name": "action"
      },
      "a6b8ed07-3298-4bc7-acee-4c18f2399ffd": {
        "type": "any",
        "name": "response"
      }
    },
    "outputs": {
      "38ea8704-dc28-470e-b30f-f1eee9adaafd": {
        "type": "any",
        "name": "request"
      },
      "2d59f4f5-da3a-4e88-b071-f863cda4e553": {
        "type": "any",
        "name": "done"
      }
    }
  },
  "name": "io/http/express/Express",
  "description": "Core interface to Express.js. Use higher level nodes to interact with Express."
}