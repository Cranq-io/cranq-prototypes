{
  "implementations": {
    "es6": {
      "initFunction": "const traverse = (node, path, cb) => {\n  if (node instanceof Array)\n    for (let i = 0, length = node.length; i < length; i++)\n      traverse(node[i], [...path, i], cb);\n  else if (node instanceof Object)\n    for (const key in node)\n      traverse(node[key], [...path, key], cb);\n  else if (node !== undefined)\n    cb(node);\n}\nstate.traverse = traverse;",
      "inputFunctions": {
        "376e9955-012a-4b86-a062-f41b479fa6ba": "const result = [];\nstate.traverse(data, [], (node) => result.push(node));\noutputs.values(result, tag);"
      }
    },
    "es6-node": {
      "initFunction": "const traverse = (node, path, cb) => {\n  if (node instanceof Array)\n    for (let i = 0, length = node.length; i < length; i++)\n      traverse(node[i], [...path, i], cb);\n  else if (node instanceof Object)\n    for (const key in node)\n      traverse(node[key], [...path, key], cb);\n  else if (node !== undefined)\n    cb(node);\n}\nstate.traverse = traverse;",
      "inputFunctions": {
        "376e9955-012a-4b86-a062-f41b479fa6ba": "const result = [];\nstate.traverse(data, [], (node) => result.push(node));\noutputs.values(result, tag);"
      }
    }
  },
  "interface": {
    "inputs": {
      "376e9955-012a-4b86-a062-f41b479fa6ba": {
        "type": "any",
        "name": "tree"
      }
    },
    "outputs": {
      "15c36d00-6f40-4f21-a735-0835c76c2222": {
        "type": "any[]",
        "name": "values"
      }
    }
  },
  "name": "data/tree/Values getter",
  "iconId": "c3fdd7fb-1ae3-400a-bf93-30e24b1ea004",
  "attributes": {}
}
