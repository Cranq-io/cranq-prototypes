{
  "description": "",
  "interface": {
    "inputs": {
      "acf1b446-a89f-4af0-8865-174b1dcbb51f": {
        "type": "{\"tree\":any[] or {string:any},\"path\":(string | number)[]}",
        "name": "tree & path"
      }
    },
    "outputs": {
      "55eb513c-0913-498a-b11c-db8d9d0d41bf": {
        "type": "any",
        "name": "node"
      },
      "0b5f38f9-0f97-4d38-8cfa-92d2b444a159": {
        "description": "",
        "type": "any",
        "name": "not found"
      }
    }
  },
  "implementations": {
    "es6-node": {
      "cleanupFunction": "",
      "dependencies": {},
      "initFunction": "",
      "inputFunctions": {
        "acf1b446-a89f-4af0-8865-174b1dcbb51f": "const {tree, path} = data;\nlet node = tree;\nfor (let i=0, length=path.length; i<length; i++) {\n  if (node instanceof Object) {\n    node = node[path[i]];\n  } else {\n    node = undefined;\n    break;\n  }\n}\nif(node === undefined) {\n  outputs[\"not found\"](path, tag)\n}\nelse {\n  outputs.node(node, tag);\n}"
      }
    }
  },
  "name": "data/tree/Node getter/Internal",
  "attributes": {
    "internal": true,
    "locked": true
  }
}