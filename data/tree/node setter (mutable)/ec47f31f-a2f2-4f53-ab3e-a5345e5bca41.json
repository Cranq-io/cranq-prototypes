{
  "description": "Sets a node at the specified path of the tree. Mutates input.\n\nWarning! This node mutates the tree it gets that means if any other node received the same tree as input from the original source it may get the modified tree depending on the execution order!\n\nExample:\n1. {\"foo\": {\"bar\": 1}}@0 is received via `tree`\n2. [\"foo\", \"baz\"]@0 is received via `path`\n3. 1@0 is received via `node`\n4. {\"foo\": {\"bar\": 1, \"baz\": 1}}@0 is sent via `modified tree`",
  "interface": {
    "inputs": {
      "0d7e3081-01f4-41bf-b4b3-822ee0990aa3": {
        "type": "any[] or {string:any}",
        "name": "tree",
        "description": "Tree data structure in which to store a node.\n\nWill be mutated."
      },
      "1670d7c3-36ce-42d6-8411-b90866ca411a": {
        "type": "(string or number)[]",
        "name": "path",
        "description": "Receives the path segments where the `node` should  be written to"
      },
      "5436f8ba-84e3-48e2-bd39-9ccaa8aeea9a": {
        "type": "any",
        "name": "node",
        "description": "Receives the node to be set"
      }
    },
    "outputs": {
      "eb1f3b40-bfd7-4343-acd9-2adcdd6d5a8c": {
        "type": "any[] or {string:any}",
        "name": "modified tree",
        "description": "Sends the modified tree"
      }
    }
  },
  "implementations": {
    "cranq": {
      "nodes": {
        "c86427a5-ebd2-4aa3-8032-4bf9383e7695": {
          "coordinates": [
            -20,
            67
          ],
          "description": "",
          "params": {
            "ef31c1e9-cfd5-458b-8d3a-951e3db9c232": "[\"tree\",\"path\",\"node\"]"
          },
          "prototype": "222a7543-3692-4c6d-b027-c422c99b23a1",
          "name": "sync tree & path & node"
        },
        "db9c2660-ff6c-4308-80c1-f4c95472409e": {
          "coordinates": [
            7,
            -54
          ],
          "description": "",
          "params": {},
          "prototype": "f8dd4c21-dfc4-476e-8361-f6ef972d5e09",
          "name": "set node"
        }
      },
      "connections": {
        "c86427a5-ebd2-4aa3-8032-4bf9383e7695": {
          "75cde7e3-b158-4836-8bcd-a89e72314ee8": {
            "db9c2660-ff6c-4308-80c1-f4c95472409e": {
              "71cc8f4a-8801-4abc-9352-21125bb24296": {
                "description": ""
              }
            }
          }
        }
      },
      "forwards": {
        "inputs": {
          "0d7e3081-01f4-41bf-b4b3-822ee0990aa3": {
            "c86427a5-ebd2-4aa3-8032-4bf9383e7695": {
              "tree": {}
            }
          },
          "1670d7c3-36ce-42d6-8411-b90866ca411a": {
            "c86427a5-ebd2-4aa3-8032-4bf9383e7695": {
              "path": {}
            }
          },
          "5436f8ba-84e3-48e2-bd39-9ccaa8aeea9a": {
            "c86427a5-ebd2-4aa3-8032-4bf9383e7695": {
              "node": {}
            }
          }
        },
        "outputs": {
          "eb1f3b40-bfd7-4343-acd9-2adcdd6d5a8c": {
            "db9c2660-ff6c-4308-80c1-f4c95472409e": {
              "504be2a1-59dc-4120-bd4b-dc2a70c75d78": {}
            }
          }
        }
      }
    }
  },
  "name": "data/tree/Node setter (mutable)",
  "keywords": {
    "tree": null,
    "set": null,
    "setter": null
  },
  "iconId": "89f4fde2-5391-4f4c-b55a-55ada280f89c",
  "attributes": {
    "locked": true
  }
}
