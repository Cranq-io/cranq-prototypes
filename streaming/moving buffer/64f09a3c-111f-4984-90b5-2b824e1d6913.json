{
  "implementations": {
    "es6": {
      "inputFunctions": {
        "acf08481-e382-4767-82f1-5c3af3ed13fd": "const {size} = params;\nif (typeof size !== \"number\" || size === 0) {\n  outputs.error({message: \"Invalid buffer size\"}, tag);\n  outputs.bounced(data, tag);\n} else {\n  let buffer = state.buffer;\n  buffer = buffer.length < size\n    ? [...buffer, data]\n    : [...buffer.slice(1), data];\n  state.buffer = buffer;\n  outputs.buffer(buffer, tag);\n}"
      },
      "initFunction": "state.buffer = [];"
    }
  },
  "interface": {
    "inputs": {
      "acf08481-e382-4767-82f1-5c3af3ed13fd": {
        "type": "any",
        "name": "sample",
        "description": "Receives individual samples to be buffered."
      },
      "d4a83b12-ef55-4a50-93bc-1df4c3a0d55d": {
        "type": "number",
        "name": "size",
        "description": "Specifies the maximum number of samples stored in the buffer.\n\nMust be parameter."
      }
    },
    "outputs": {
      "a02faf6e-026c-48c5-b31c-96c80ef3ac57": {
        "type": "typeof `sample`[]",
        "name": "buffer",
        "description": "Sends current contents of moving buffer. Immutable."
      },
      "077d4a27-827c-4e33-bded-ab812c5ee18d": {
        "type": "{\"message\": string}",
        "name": "error",
        "description": "Sends error when:\n* size is 0 or not set"
      },
      "236e0b01-a5f6-4872-a427-b40e38873798": {
        "type": "typeof `sample`",
        "name": "bounced",
        "description": "Forwards input received via `sample` on error."
      }
    }
  },
  "name": "streaming/Moving buffer",
  "description": "Stores the last N inputs received via `sample` and sends them via `buffer`.\n\nErrors on invalid `size`.\n\nData sent via `buffer` is immutable.\n\nExample:\n1. `size` set to 2\n2. \"A\"@0 received via `sample`\n3. [\"A\"] sent via `buffer`\n4. \"B\"@1 received via `sample`\n5. [\"A\",\"B\"] sent via `buffer`\n6. \"C\"@2 received via `sample`\n7. [\"B\", \"C\"] sent via `buffer`",
  "keywords": {
    "buffer": null,
    "overflow": null,
    "stream": null,
    "rotate": null,
    "window": null
  },
  "attributes": {
    "locked": true
  }
}