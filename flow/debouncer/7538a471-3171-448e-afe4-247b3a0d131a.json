{
  "description": "Debounces signals received through `data`.\n\nExample:\n1. `delay` is set to 1000.\n2. \"a\"@0 received via `data`\n3. waiting 0.5s (500ms)\n4. \"b\"@1 received via `data`\n5. waiting 1.1s (1100ms)\n6. \"b\"@1 sent via `data` (output)",
  "interface": {
    "inputs": {
      "5819ad6f-855e-4be2-aec5-f715de73eecd": {
        "description": "Receives signal to be debounced.",
        "type": "any",
        "name": "data"
      },
      "3fd86ab3-788e-461e-86cc-4437ff36963f": {
        "description": "Minimum delay in milliseconds between last signal received through `data` (input) and sent through `data` (output).\n\nMust be set as a parameter.",
        "type": "number",
        "name": "delay"
      }
    },
    "outputs": {
      "56fc164d-1c57-4795-9efb-e610645ec87b": {
        "description": "Sends the debounced signal.",
        "type": "typeof `data`",
        "name": "data"
      }
    }
  },
  "implementations": {
    "es6": {
      "cleanupFunction": "",
      "dependencies": {},
      "initFunction": "",
      "inputFunctions": {
        "5819ad6f-855e-4be2-aec5-f715de73eecd": "const {timer} = state;\nif (timer)\n  clearTimeout(timer);\nstate.timer = setTimeout(() => outputs.data(data, tag), params.delay);"
      }
    },
    "es6-node": {
      "cleanupFunction": "",
      "dependencies": {},
      "initFunction": "",
      "inputFunctions": {
        "5819ad6f-855e-4be2-aec5-f715de73eecd": "const {timer} = state;\nif (timer)\n  clearTimeout(timer);\nstate.timer = setTimeout(() => outputs.data(data, tag), params.delay);"
      }
    }
  },
  "name": "flow/Debouncer",
  "keywords": {
    "time": null,
    "timing": null,
    "throttle": null
  },
  "iconId": "5e431e82-f53c-441f-8721-f5b6e0257a4d",
  "attributes": {
    "locked": true
  }
}
