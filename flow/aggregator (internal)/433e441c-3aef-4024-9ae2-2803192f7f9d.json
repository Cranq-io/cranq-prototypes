{
  "description": "See `flow/Aggregator`",
  "interface": {
    "inputs": {
      "9a18c395-51a4-46f6-8fa5-41a4a77a117d": {
        "type": "{\"data\": any, \"released\": boolean}",
        "name": "data & release"
      }
    },
    "outputs": {
      "d52d914a-5f94-4a04-8543-d920e2df5ee9": {
        "type": "typeof `data & release`[\"data\"][]",
        "name": "aggregated"
      }
    }
  },
  "implementations": {
    "es6": {
      "cleanupFunction": "",
      "dependencies": {},
      "initFunction": "state.aggregated = state.aggregated || [];",
      "inputFunctions": {
        "9a18c395-51a4-46f6-8fa5-41a4a77a117d": "const {data:item, release} = data;state.aggregated.push(item);\nif (release) {\n  outputs.aggregated(state.aggregated, tag);\n  state.aggregated = [];\n}"
      }
    },
    "es6-node": {
      "cleanupFunction": "",
      "dependencies": {},
      "initFunction": "state.aggregated = state.aggregated || [];",
      "inputFunctions": {
        "9a18c395-51a4-46f6-8fa5-41a4a77a117d": "const {data:item, release} = data;state.aggregated.push(item);\nif (release) {\n  outputs.aggregated(state.aggregated, tag);\n  state.aggregated = [];\n}"
      }
    }
  },
  "name": "flow/Aggregator (internal)",
  "attributes": {
    "internal": true,
    "locked": true
  }
}
