{
    "description":  "",
    "interface":  {
                      "inputs":  {
                                     "keys \u0026 values":  {
                                                                "type":  "{\"keys\":string[],\"values\":any[]}"
                                                            }
                                 },
                      "outputs":  {
                                      "dict":  {
                                                   "type":  "{string:typeof(keys \u0026 values)[\"values\"][number]}"
                                               }
                                  }
                  },
    "implementations":  {
                            "es6-node":  {
                                             "cleanupFunction":  "",
                                             "dependencies":  {

                                                              },
                                             "initFunction":  "",
                                             "inputFunctions":  {
                                                                    "keys \u0026 values":  "const result = {};\nconst {keys, values} = data;\nfor (let i=0, length=Math.min(keys.length, values.length); i\u003clength; i++)\n  result[keys[i]] = values[i];\noutputs.dict(result, tag);"
                                                                }
                                         }
                        },
    "name":  "data/dictionary/Builder/keys \u0026 values/_"
}