{
  "description": "Forwards both received signals in the order of the names of the ports.\n\nUsed for two purposes:\n* Ensuring that any of a node's inputs may receive signals or be set as parameter.\n* Ensuring the order in which signals are sent.\n\nExample a) param vs. signal:\n1. `2`(input) set to \"B\"\n2. \"A\"@0 received via `1` (input)\n3. \"A\"@0 sent via `1` (output)\n4. \"B\"@0 sent via `2` (output)\n\nExample b) signal order:\n1. \"B\"@0 received via `2` (input)\n2. \"A\"@0 received via `1` (input)\n3. \"A\"@0 sent via `1` (output)\n4. \"B\"@0 sent via `2` (output)",
  "interface": {
    "inputs": {
      "e76062c0-e298-4443-a187-94cbd4b3bc74": {
        "type": "any",
        "name": "1",
        "description": "Receives signal or takes parameter to be sent out first."
      },
      "7af76a3e-ed65-41b9-9f9d-1a4593c5bf69": {
        "type": "any",
        "name": "2",
        "description": "Receives signal or takes parameter to be sent out second."
      }
    },
    "outputs": {
      "069a212d-9cea-4987-be45-e0079a13d96f": {
        "type": "typeof `1`",
        "name": "1",
        "description": "Forwards signal received via `1` (input)."
      },
      "d1295197-1962-4680-a037-5890f2175bb9": {
        "type": "typeof `2`",
        "name": "2",
        "description": "Forwards signal received via `2` (input). Does not send before `1` (output)."
      }
    }
  },
  "implementations": {
    "cranq": {
      "nodes": {
        "76b31d35-373f-415e-a0a4-9faa80e2ac4e": {
          "coordinates": [
            -7,
            54
          ],
          "description": "",
          "params": {
            "ef31c1e9-cfd5-458b-8d3a-951e3db9c232": "[\"1\",\"2\"]"
          },
          "prototype": "222a7543-3692-4c6d-b027-c422c99b23a1",
          "name": "sync inputs"
        },
        "5089473d-add9-4be6-b13a-34e3b9444454": {
          "coordinates": [
            22,
            -54
          ],
          "description": "",
          "params": {
            "7b39d568-3d5a-46fe-8670-3355f60c2746": "[\"1\",\"2\"]"
          },
          "prototype": "73303290-6d1e-44cf-9414-66769cbb8e91",
          "name": "restore in order"
        }
      },
      "connections": {
        "76b31d35-373f-415e-a0a4-9faa80e2ac4e": {
          "75cde7e3-b158-4836-8bcd-a89e72314ee8": {
            "5089473d-add9-4be6-b13a-34e3b9444454": {
              "6ad86184-6890-4323-8021-3496a682c98e": {
                "description": ""
              }
            }
          }
        }
      },
      "forwards": {
        "inputs": {
          "e76062c0-e298-4443-a187-94cbd4b3bc74": {
            "76b31d35-373f-415e-a0a4-9faa80e2ac4e": {
              "1": {}
            }
          },
          "7af76a3e-ed65-41b9-9f9d-1a4593c5bf69": {
            "76b31d35-373f-415e-a0a4-9faa80e2ac4e": {
              "2": {}
            }
          }
        },
        "outputs": {
          "069a212d-9cea-4987-be45-e0079a13d96f": {
            "5089473d-add9-4be6-b13a-34e3b9444454": {
              "1": {}
            }
          },
          "d1295197-1962-4680-a037-5890f2175bb9": {
            "5089473d-add9-4be6-b13a-34e3b9444454": {
              "2": {}
            }
          }
        }
      }
    }
  },
  "name": "flow/Forwarder (double)",
  "attributes": {
    "locked": true
  },
  "keywords": {
    "order": null,
    "signal order": null,
    "parameter to signal": null
  }
}