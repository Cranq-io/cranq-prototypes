{
  "description": "",
  "interface": {
    "inputs": {
      "236a0ed3-2ef0-4a72-bfe4-c3ab20a4da85": {
        "type": "{\"item\":any,\"count\":number}",
        "name": "item & count"
      }
    },
    "outputs": {
      "22433c0a-a79a-46d3-b649-2e75f5375624": {
        "type": "typeof(item & count)[\"item\"]",
        "name": "array"
      }
    }
  },
  "implementations": {
    "es6-node": {
      "cleanupFunction": "",
      "dependencies": {},
      "initFunction": "",
      "inputFunctions": {
        "236a0ed3-2ef0-4a72-bfe4-c3ab20a4da85": "const {item, count} = data;\nconst result = [];\nresult.length = count;\nfor (let i=0; i<count; i++)\n  result[i] = item;\noutputs.array(result, tag);"
      }
    }
  },
  "name": "data/array/Builder/Internal",
  "attributes": {
    "internal": true,
    "locked": true
  }
}