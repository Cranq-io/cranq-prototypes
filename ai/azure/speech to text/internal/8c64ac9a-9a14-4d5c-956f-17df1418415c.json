{
  "implementations": {
    "es6-node": {
      "inputFunctions": {
        "89c3add3-f586-4007-ae67-6cc5ec4f0fe6": "const fs = require(\"fs\");\nconst sdk = require(\"microsoft-cognitiveservices-speech-sdk\");\n\nconst SPEECH_KEY = data[\"SPEECH_KEY\"]\nconst SPEECH_REGION = data[\"SPEECH_REGION\"]\nconst filepath = data[\"file path\"]\n\n// This example requires environment variables named \"SPEECH_KEY\" and \"SPEECH_REGION\"\nconst speechConfig = sdk.SpeechConfig.fromSubscription(SPEECH_KEY, SPEECH_REGION);\nspeechConfig.speechRecognitionLanguage = \"en-US\";\n\nfunction main() {\n    let audioConfig = sdk.AudioConfig.fromWavFileInput(fs.readFileSync(filepath));\n    let speechRecognizer = new sdk.SpeechRecognizer(speechConfig, audioConfig);\n\n    speechRecognizer.recognizeOnceAsync(result => {\n        switch (result.reason) {\n            case sdk.ResultReason.RecognizedSpeech:\n                outputs['text'](result.text, tag);\n                break;\n            case sdk.ResultReason.NoMatch:\n                outputs['error'](\"Speech could not be recognized.\", tag);\n                break;\n            case sdk.ResultReason.Canceled:\n                const cancellation = sdk.CancellationDetails.fromResult(result);\n                const errorText = (cancellation.reason == sdk.CancellationReason.Error) ?\n                `, ErrorCode=${cancellation.ErrorCode}, ErrorDetails=${cancellation.errorDetails}` :\n                \"\";\n                outputs['error'](`CANCELED: Reason=${cancellation.reason} ${errorText}`);\n                break;\n        }\n        speechRecognizer.close();\n    }, (err)=>console.log(err));\n}\n\nmain();\n"
      },
      "dependencies": {
        "npm": {
          "microsoft-cognitiveservices-speech-sdk": {
            "description": ""
          }
        }
      }
    }
  },
  "interface": {
    "inputs": {
      "89c3add3-f586-4007-ae67-6cc5ec4f0fe6": {
        "type": "any",
        "name": "in"
      }
    },
    "outputs": {
      "b9ffcede-7d83-4016-a12c-b9fb49244764": {
        "type": "string",
        "name": "text"
      },
      "47693f97-e134-4fde-8ef1-877461c7c656": {
        "type": "{\"error\": string}",
        "name": "error"
      }
    }
  },
  "name": "AI/Azure/speech to text/internal",
  "attributes": {
    "internal": true,
    "locked": true
  }
}
